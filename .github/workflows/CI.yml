name: CI
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
    env:
      # Default minikube settings block us from launching 2 pods
      # https://minikube.sigs.k8s.io/docs/handbook/config/#environment-variables
      MINIKUBE_CPUS: 4
      MINIKUBE_MEMORY: 16384
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # https://github.com/marketplace/actions/docker-setup-buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # https://minikube.sigs.k8s.io/docs/handbook/config/#environment-variables
      # - name: Configure minikube
      #   run: |
      #     echo "MINIKUBE_CPUS=4" >> GITHUB_ENV
      #     echo "MINIKUBE_MEMORY=16384" >> GITHUB_ENV

      - name: Set up minikube
        uses: manusa/actions-setup-minikube@v2.3.1
        with:
          minikube version: v1.19.0
          kubernetes version: v1.20.5
          driver: docker
      - name: Set up minikube docker-env
        run: minikube docker-env | sed -n 's/^export \(.*\)="\(.*\)"/\1=\2/p' >> $GITHUB_ENV
      - name: Check GITHUB_ENV
        run: |
          env
          docker ps -a
          docker images

      # - name: Setup minikube docker environment
      #   run: minikube docker-env >> $GITHUB_ENV

      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v2
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-artifacts-${{ hashFiles('**/Project.toml') }}
          restore-keys: ${{ runner.os }}-test-artifacts
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        continue-on-error: ${{ matrix.version == 'nightly' }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
